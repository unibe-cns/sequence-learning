name: Run Pytest and check for code quality

on:
  workflow_dispatch:
  push:
    branches: [main, dev]
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches: [main, dev]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: pip

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 isort
        pip install -r requirements.txt

    - name: Check code formatting with isort
      run: isort --check --diff .

    - name: Lint with flake8
      run: flake8 .
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache virtual environment
      uses: actions/cache@v3
      with:
        path: ~/.venv
        key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-

    - name: Create and activate virtual environment
      run: |
        python -m venv ~/.venv
        echo "VIRTUAL_ENV=~/.venv" >> $GITHUB_ENV
        echo "~/.venv/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Run pytest
      run: pytest --cov=elise --continue-on-collection-errors
